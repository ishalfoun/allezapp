
[new proj instructions]
-create new folder, git init, create git, link and push
-npm install -g @vue/cli
-vue create allezapp
	-vue 2
	-babel, router, vuex, css, linter
	-history:no
	-sass/scss (node)
	-eslint+airbnb
	-lint on save
	-in package.json
-cd allezapp
-npm run serve
-had to change the firebase.json fle:
hosting: public
to:
hosting: dist


setup firebase db + auth + hosting
plan:
[x] -set up firebase db
[x]-create each file for {user/profile/Navbar}
[x]	-login + st
	
-----------------

[todo]
[x] -so new routes adding works
[x] -old routes deleting works
[x] -make the profileroutes init with the profile
[x] -pRs also include rating and route
[x] 	-test by creating new routes and sync

[x]  profile needs last-updated field
[x]		-this is set when getRoutes succeeds
[x]  input: table called 'last-update'
[x] 	- when I add a route, last-update
		  gets filled in with 19.3.2020 6:32
[x]  check:
		-when logging in, compared last-u
		-if same do nothing
		-if diff: sync.
[x] Input Mode:
[x]	(pictured)
	-back, clear, enter/New, enter/Next


publish:
-make a new page, here all changes are compiled
[x] Publish.vue
	-all additions i made
	-all deletions i made
	-(check each routeNum and Rating to see diffs)
	-commit button
		-this will save changes to routes_real
		-update the old file to get things from routes_real
[x] what if i duplicated a route by accident.
[x] what if they replace a route by the same rating..... and it doesnt show on either addition or removal


-maybe we dont need the whole big if statements
	- just get all literal additions
	- and get all literal deletions
	- and show.
	-if i overwrite, its my bad and will be a new route.
		-thats why i must check what i delete and add.
		-if add and rem show same
			-then i decide:
				if replaced: leave it as is
				if my mistake: undo both.
				
    // old:
    // 1 - loop through routes
    // 2 - if it doesnt exist in routesReal,: an addition i made
    // 3 - if it exists, check if it is at it's own first found index
    //   - if not, it is a duplicate.
    //    -check how often it exists.
    //      -if twice
    //        -check if routesReal also has it twice....
    //          - if more than twice: a deletion I made +(flag it)
    //          - if less: an addition I made +(flag it for del)
    //          - if yes: do nothing.
    // 4 - loop through routesReal
    // 5 - if it doesnt exist in routes,: a removal i made
    // 6 - if it exists, check if it is at it's own first found index (dupe)
    // 7 -  if not, its a dupe that is now single: a removal i made

[plan]
[x] additions:
	-check by id (routes:routesReal)
[x] del 
	-check by id (routes:routesReal)
[x] disply with indiv del btn
[x] have a final commit button:
	-commits myroutes:
		-adds all additi./del all del's
		-to routesReal
	-make sure both are in sync
		-then clear add/del's
		


[problems now:]
publish:
[x]	-when fresh loading, its perfect.
[x]	-commit refreshing the table no works
[x]	-input: delete rec's, doesnt update
[x]	-input: add rec's, doesnt update
[x]	-when switching page, not update
	
	
routes: what i edit in input
routesreal: edits after commit
profileroutes: takes from routesreal

todo:
profileroutes:
[x] change original db to routesReal
[x] hide profiles from normal user.	

TODO::
[x] fix navbar in mobile view (name overlaps)
[x] fix when rerouting, navbar menu should close.
[x] can add empty routes!!
[x] only accessible by me
	-put a rule: if profileid: ...
[x] when clicking 8 or 9, disable a-d
[x] 	  allow empty 5.10s?(otherwise {a-d} req'd)
[x] make + button green when you selected two things.
[x] dont accepta PLUS if no letter is selct'd
[NB] if last update is returning nothing, show on screen 'no new update'
[NB] make the 'get from server' force the update even if last upd is no good, in sidemenu
[X] make sure deleting in input does not update last updated
[x] its not checking for updates when clicking 'allezApp' at the top (rerouting problem)

DESIGN:
[x] color everything in th esame
[x] number is location !!!
[NB] sort button says Rating/Number
[x] filter: dropdownappears with 3 choices 
btncentered
[x] in menu:legend : pops up a closable legend
[x] make the navbar and top part not scroll
	
[x] check if when hosting via firebase, if the rules get updated to allow all
	-do at end, when uploading
[x] - add icons (autobelay, etc)
	- check which roues are auto (10-14)
	- these routes will 
	

method 1:
[x]  -input: 
		buttons for all those
[x]	-routes has 
		'flag_autob: true'
		'flag_overh: true'
		'flag_lead: true'
		'flag_topr: true'
	-this goes to all records.
[x]		-commit -> routesReal
[x]		-watch.profile() -> profileRoutes
	

[NB] whle profile is loading shit
	-set to loading
	-loading done when profle.lastUpdate write success
[x] bug: input; if only licking a letter, + lights up, and a ?c can be added
[x] bug input: if clicking left or right arrows, plus stays light up
[x] input: when clicking anything, it turns yellow, and plus btn is green.
    add colors of routes!!!!
[x]  -input: 
		buttons for all those
[x]	-routes has 
		color: [red, blue, green, white, black, orange, pink]
	-this goes to all records.
[x]		-commit -> routesReal
[x]		-watch.profile() -> profileRoutes
[x] see it in input, publish, home
[x] home: make b-table sortable for column completed


todo:

Statistics:
-a new page:
-h1: routes i did today:
-h1 previous routes: (sort by date)

(When you check off a route, it gets saved to statistics table
Fields:
(Route/rating/flags) (dayCompleted) (profile id)

at end you view:
	-routes climbied today:
	-# climbed this weeek...

[x] when opening edit modal, reset notes
[x] in edit modal:
[x]	btn func: attempted+ completed
[x]	they create an entry as a string in an array?
[x] view modal:
	8/21: (L) {notes)
[x] New way to Complete:
	- clicking the entire row opens a popup
	- here you can ceheck 'did it on lead/tr'
	- comment secion
		
[x] editmode:
	-have date input limit of 9 chars.
[x] each route needs a date added orig
	-view it in edit and modal
	-may need to set it at time of setting the route
		
[x] edit btn: change onclick to whole row
[x] add icon

[x] titles
[x] in edit modal: disable tr if no tr, lead if no lead.
	-modalProps has the route flags
	-make the radio btns disabled if flags
[x] on non autobelay routes: in edit modal: autoB option should be gone.
[x] on autob routes: in edit modal: topr and lead should be gone, unless if allowed.

[x] center the route set date in editmodal
[x] 		completed btn: centerd
		icons in middle
		
[x] add the setting for default climbing:
	-in menu
	-top: yellow (left)
	-lead: red (right)
	
	
	
[x] when you log in it gets the value
[x]	1. make it so when you refresh, the t/l persist in navbar
[x]	2. make the modal use the value 
[x] when you change it, it persists.

[x] fix profile bug
	problem:
	when logging in and calling 'getRoutes',
		in the first check, profile.lastupdate=0
		1. trying to not save in db as .toDate
		-nvm, there was no update bc no new routes added
	[] why is the profile.lastUpdate: 0 at start of getRoutes()?
	[x] before calling getroutes, also 0
	[x] profile in db has correct date. (being saved)
	!! profile lvl is also always 0!!
	fix is doc.data() in profile.js
	
[x] make sure attempt works.
[x] route added in editmodal: show actual date (not working)

[NB] in viewmodal:
nb	-have a table instead of v-for
nb	sortable by date, then by dateAd
nb	-table is filled by entries obv.

pu: 7

for now:
[x] remove the delet button
[x] green C: completed
[x] yellow A: attempted
[x] lead toprope:
	[x]-menu option decides default sel
	[x] when creating the attempt, the lead/tr needs to be saved
	
	[x] bug with the radio:
		-they just function as images, they dont modify the actual modalProps.
				
		finding#1:
		-without the onEditRoute assignment, it works.
		=any code here makes the entire radio not work.
		
		-one you clicky first, the entire thing will never work again.
		-if you click the radio first, all is good.
		
		#problem now:
		-default does not work (any code will stop it)
		### FIX:
		the var switchTopLeadAuto
		has to be outside of modalProps.
				
	[x] if it is a completed, instead of setting it to complete, set it to lead_cmp
	[x] if it is a attempt, instead of setting it to attempt, set it to lead_cmp=A
	[x] second logic:
		-if not yet lead completed, and new lead, set lead cmp
		-if not yet top complt, and new top, st top_cmp
	[x] show in home page lead_cmp and top_cmp
	[x] show in view attempt
	
[x] remove the *
[x] code the legend

-	in the 'location'column:
	-the number represents where in the gym the route is
	-the icons represent what type of route it is:
		(a): autobelay
		(t): toprope able
		(l): leadable
	-use the botton on the right end of each line if you attempted or completed a route.
		you can add personal notes or modify the date
	-(attempt): means you only attempted the route
	-(cmp): means you also completed the route.
	
[x]desktop mode:
[x]	-move everything down a bit
[x]	-have the left be: name - V
[x]	-fill in the menu
	-logout
	-default: tr/lead
	-input publish
[x] in viewmodal: make icons
	-need a yellow icon for attempt
	-this for cmp=A. cmp=Y is carab.
	
	
	
	
	
	
fixes:
[x] fix permission error when adding a route?
'FirebaseError: The caller does not have permission'
	-need to find out if the solution will be to add a route in rules in firebase.
		-error was firebase permissions was set to write: true for all while testing, added a /*/* in firestore rules.
[x] make a checkbox 'make public' (named checkboxcustom for now.
	-if this is set to true,
		when clicking on completed
		or attempted,
			this will be recorded in new table: routeComments
			-you can write a comment to a new table: routeComments
	modalComplete():
		-if (postpublic)
		{
			newRecord: same fields
			await db.coll('routecomments').add(newRecord)
		}
		
		
		
		
	cmp:
	-add the new enty to subcollection of profilerouts
	-if lead, set profileroutes lead_cmp=Y
	-elif top, set profileroutes top_cmp=Y
	-elif autob, set profilesrouts autob_cmp='Y'
	-refresh componentke
		
		
	att:
	-add new entry sub collection of profil [x]
	-if lead, 
		and if lead_cmp !=Y, 
			and if Attempt
				set lead_cmp=A
			if cmp
				set lead_cmp=Y
	-elif top, 
	*****and if top_cmp !=y, set top_cmp: A

if attempt
	if lead
	'

A: ATTEMPT
 L: LEAD
  Y: PREVIOUS STATE OF L/T_CMP
 T: TOPROPE
C: COMPLETE
  A: PREVIOUS STATE 
ALY - DO NOTHING
ALA - DO NOTHING
AL_ - PUT 'A'@L
ATY - DO NOTHING
ATA - DO NOTHING
AT_ - PUT 'A'@T
CLY - DO NOTHING
CLA - PUT 'C'@L
CL_ - PUT 'C'@L
CTY - DO NOTHING
CTA - PUT 'C'@T
CT_ - PUT 'C'@T

AL_ - PUT 'A'@L
AT_ - PUT 'A'@T
CLA - PUT 'C'@L
CL_ - PUT 'C'@L
CTA - PUT 'C'@T
CT_ - PUT 'C'@T

if attempt 
  if lead
    if prev=''
      PUT 'A'@L
  if top 
    if prev=''
      PUT 'A'@T
if cmp
  if lead
    if prev='A'
    or if prev=''
      PUT 'C'@L
  if top
    if prev='A'
    or if prev=''
	  PUT 'C'@T

ALY - DO NOTHING
ALA - DO NOTHING
ATY - DO NOTHING
ATA - DO NOTHING
CLY - DO NOTHING
CTY - DO NOTHING


if attempt 
  if lead
    if prev=''
      PUT 'Att'@Lead
  if top 
    if prev=''
      PUT 'Att'@Tr
  if autoB 
    if prev=''
      PUT 'Att'@AutoB
if cmp
  if lead
    if prev='Att'
    or if prev=''
      PUT 'Y-CMP'@Lead
  if top
    if prev='Att'
    or if prev=''
	  PUT 'Y-CMP'@Tr
  if autoB
    if prev='Att'
    or if prev=''
	  PUT 'Y-CMP'@autoB



[x] fix logic for modalSubmit
[x] fix icon position of cmp's
in view modal:
[x] show heading 'your attempts:'
	-then your attempts
[x] then another heading halfway down that says 'public comments':
[x]-have a v-for with:
	(test data first)
	-same fields, (type, cmp, date, comments
	-but the commend field is bigger
	-and there is a name (First L.)
	-and the profile pic
	
why is there a profile?
so that you can change username, or change image
user is the login
	-only set profile.name if user requests it
		-or at first login

right now:
[x] 1. make the profile have the username 
	-only set profile.name if user requests it
		-or at first login
[x] 2. show the name and pic again in navbar
[x] 3. put the name and pic in the comment
[x] 4. show this.
	

[x] make default if autob
[x]  show in entries if autob
[x]	shows this table, where the route id matches with route id to show all comments for that route
		-show real records



[x]-filtering - visuals
[x] - filtering - code
	-hide autobelays:
	-hide the records in the view
	data going into the table is a list.
	filter that list based on which var is true.
	data="(hideAutoB)? filterAutoB(list) : list"
		
		
[x]todo: 
-Navbar.253:
	-save the switches to dataJS
[x] in home.vue:
	- filterRoutes(arg)
	-add into function:
		-if(hideAutoB)
			return filterAutoB(list)
		-if (hideLead)
			return filterLead(list)
	-then refresh table.
7
7
7
7
8
	5
	3
	4
	5
7
7
8
	5
	4
	4


[NB] todo: in dataJS.41, save the args to profile in db.
[x] later, connect the Navbar click.		
}		
[x] fix the default autob
[x]-tr/l switch in db???
[x] navbar: hide autobleays and others.
	-hide autobelay: [show/hide]
	-only show lead [ lead / all ]
	-only show toprope [toprope / all ]
[x] close nav func in all navbar menu clicks

[x]sorting !!( after filtering)
-rating

1)
 :custom-sort="customSortFunc"
 :customSort (same thign)
 -in column
	-calls the function
	-no sorting
	->									find out how to code the function, so shows wrong table tag. ->2)
 -in column, without field:
	-same result
 -in table
	-not called, but sorts
	->									maybe other flags needed?					
 -in v-data-table
	-shown on stackoverflow

2)
 :sort-compare="customSortFunc"
 -in table
	-shown on stackoverflow
	-not called, but sorts

10a -> 10.1
10b -> 10.2
7

cmp_lead = 6
att_lead = 5
cmp_top = 4
att_top = 3
cmp_autob = 2
att_autob = 1
nothing = 0

newA.cmp_lead && !newB.cmp_lead ? 1 :


if (arg.lead_cmp = 'Y')
	return 6
else if (arg.lead_cmp = 'A')
	return 5
ese if (arg.toprope_cmp = 'A'

-completed

s
[bug]
attempt of tr not possible??
-> not visible on mobil!!??


[priority:]
[x] delete entries possible
	-what i want:
	1. click X
	2. delete shows up.
	3. click delete
	4. record deleted
	
	problem:
	-when click1, set it's own buttonVisible to true.
	-so we could have entry.buttonVisible on each entry.
	-then it sets that for that entry i guess.
[x]
firebase rules:
-need to st the profile id into entries
- make the delete function actually just set a profileid

[]


[x] (all clicks in modal will hide the buttons): do something with it at home.vue.164 .
-problem is that the buttons are now on on the indiv entry level."entry.deleteButtonVisible"
-also, the var is still used in the long press logic


[x] only see the X in comments if profile id same.?
[x] 'new' - flag in routes

git add . | git commit -m 'entry/comment delete logic, new flag' | git push -u origin master | npm run serve

[x] redid design of input mode.

[NB]-on mobile, all small icons are not aligned	
[x] put route added in the view, not in add att
[x] if youc omplee a autob, the icon is a autob
	-edit modal also changes for autob
[NB] in add attempt, remove title add attempt

[new]
[x] if route was set less than a week ago, put new tag in each line!
[x] delete of completion, attempts, comments (long click)
[x] add back the div at top of home.vue for the filter btn func



[x] fix: in desktop, navbar has a item
[] INPUT:
-change date of a route (or other fields)
[x]	-long click on route in inputmode
[x]	-opens modal: 
[]		-edit fields
	-two columns:
	Route#: 10 (textfield)
	Rating: 5.7 (dropdown)
	Type: 
	 autob (switch)
	 lead (switch)
	 topr (switch)
	 overh (switch)
	 
[x] copy the log click to all fields
[x] logic for each field 
	[x] route num arrows
	[x] (rating select)
	[x] icons for flags
[x]		-commit button
		-this will update 
	[x] routes, 
	[x] routesReal, 
	[x] profileroutes, all for this routeId.
	profileroutes.routeId ==
	[x]-show how many records were updated.
[x] in input editmodal: color is missing.
[x] when i publish, removed routes delete routesReal, which causes comment of routesReal to be orphaned
[x]	-where routesReal is deleted
		-also deleted comments
[x]	-where profileRoutes is deleted
		-also deleted entries
	
[NB] when hitting publish, also fix orpahned routes.
[x] make the date changeable


[x] createdate is saved as timestamp
[x] displayed in input datepicked correctly

[x] add datepicker to AddRouteModal

[x] fix bug oleg had with permissions
- in routes.comments, everyone needs to have permissions to create

[x] rate a route with stars
  [x] have input link to a field
  [x] make sure field is in db
  [x] show field in viewModal
  
map of gym:
[x] put above legend first}
[x] with button
[x] put above other
[x] upload actual images
1 = 10-17
2= 18-20
3= 21-26
4= 27-34
5= 35-41
6= 42-47
7= 48-52
8= 53-58
9= 59-65
10= 66-73
11= 74-80

[] see your own climbs:
   ex:
   -list with each day
   jul 05: 0T 5L 0A
   jul 06: 2T 0L 0A
   jul 07: 0T 0L 0A
   jul 05: 0T 5L 0A
   jul 06: 0T 14L 0A
   jul 07: 0T 0L 0A
   jul 05: 7T 5L 0A
   jul 06: 0T 0L 0A
   jul 07: 7T 0L 0A
   jul 05: 0T 5L 19A
   jul 06: 2T 0L 0A
   jul 07: 0T 0L 3A
   (click on it to open detailed rows:= with full records.)
 

8:13PM:
[x] create new page: stats
	-table
[x]     -link to it from menu

[x] onReload(){
[x]      initStatsFull()
[x]      initStatsSummary()
[x]      -show summary in table in vue
	 }
[x] statsSummary.columns: 
	T R L Date

onReload():
1. get profileroutes
2. if 0, call initPR(profile)
	-get profile
3. if >0, go ahead
initStatsFull() {
[x] fix entries to be its own table.
  []-find each entry of your pR's
  []- also look into your history.
  []  -save as array of statsFull:
  
  
problem:
while getting all entries:
-entries should be its own table
-they aleady have a --proflileId
--and routeId

I could take the entries and move them

but also lets test it first:
[x move just one to its own table
[x] then instead of calling InitEntries in the modal, call a diff one, that just pulls that table with that route Id and profileId
[[x]] it works, so do with all entries.
[x] then fix how entries are added.
[x] searching collectionentr
 [x] fixing deleteEntry
[x] then back to stats.js
(dataJS.47





 
      -  (cmpOrA,doneAs,Date,rId)
  [] but also save route,rating,color,flags
}
getStatsSummary()  {
  [] -loop: today..today-14 days
	-   getRoutes(today) {
	-     count each tr,L,A:
	-     return {date, 1Tr, 1L, 0A}
	-   newStats.add(that)
  [] and fill a local array called 'state.statsSummary'
  
[] in the table, add the extra template <template #detail="props">
[] when this is set to visible, 
	
  set the array in func
   getDtledStatsForDay(props.date) {
     search through statsFull.where(date === date) // for that specific day.
[] call it in the xml near:
<template #detail="props"> :
v-for: getDtledStatsForDay(props.date)
[] style it properly
   
   
   
   
 HISTORY TABLE
[] 	1. when a route is deleted, save the entries of that profileRoute (add the rating as a field) to table 'history'.
fields:
-profileId
-subcollection:
	-entries.
[] 	this happens in profileRoutes during the init.
[] back to initStatsFull():
    // find each 'entry' in history
   
   
   
   
   
   
   
   
   
 [] bug: opacity of attempts
 [] bug: olegs entries did not get delete:
 
possibly permission issue
(-orpahned)-my own ones were also orhaned
[] bug: default can be the selected one if disabled
   
[] attempt/completed: flash/onsite/redpoint/send
[] make an accompanying about page:
in this about page you can write a comment to the admin.
[] see your own stats:
	-all your sends, sorted by day
[] map of the gym:


[bugs/small stuff:]
[] bug: if it says connecting to server for 5 seconds, (if no records displayed)
reload page (profileroutes?) automatically. or just write .. plese refresh in 5 seconds
[] change icon from notebook to plus

[] another button beside filter: called settings:
[]   - choose between easy-medium-hard
[]   - chose to disclude autobelays ... etc
[] show at bottom 35/75 cmp
[] statistics page:
	-see % or routes completed
	-see which routes you did per day

[] default highlighted icon needs 
	to be overridden when not available for the route



[] make the hard reset posible in side menu
this  manually refresh all profileroutes:
	-this function resets your profile date so you refresh for sure.
[] input mode: implem a delete lock (if on, the delete all btn also moves to right)

[] Sort by completed
[] Cmp option: attempted (yellow)
[] Input mode: top rope, lead, etx
[] Click next: keep selected fields
[] Put a question mark possiblity
[] Add autobelays/ toprope only to entry
[] Have a shifter in input:
[] Autobelays - lead/top - top  - lead
[] bug: dont resort when cmp a route?
[] fix desktop sizes
[] defaults in edit modal: 
	-add default setting in menu
	-this is saved in profile
	-retrieved during edit modal.

[] input mode:
	-two icons are the same (overhang missing)
[] close navbar menu when clicking on navbar as well
[] make the date be a calendar datepicker
[] db rules: make table user not readable unless you are signed in?
[] dataJS.js fix code: put the firestore fuctions in a function, to not repeat them.
[]input mode: when clicking autob, disclick all other types
[] if you did the route in autob, and its only autob/able, then set it cmp
[] stars rating in add 
[] profile